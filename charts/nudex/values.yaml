# Deployment Name
appName: nux-demo
namespace: default
labels:
  app: nux-demo

appLog:
  path: /app/logs/nux-demo
# Deployment Replicas
replicaCount: 1

#add annotations
annotations:
  enabled: false

#add configmap
appcm:
  enabled: false
  # name: nux-deposit-tracker-cm
  # namespace: default
  # data:

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: app
          operator: In
          values:
          - nudex-devnet
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
    - labelSelector:
        matchExpressions:
        - key: app
          operator: In
          values:
          - nux-demo
      topologyKey: kubernetes.io/hostname

# Deployment image
image:
  repository: 590184059249.dkr.ecr.us-west-2.amazonaws.com/nudex/dev-nudex-demo
  tag: latest
  pullPolicy: Always


# Deployment env
env:
  ENV_VAR_NAME: value
  SPRING_PROFILES_ACTIVE: dev
  JAVA_OTEL_ENV: "-Dotel.traces.exporter=otlp \
    -Dotel.metrics.exporter=otlp \
    -Dotel.exporter.otlp.endpoint=http://otel-collector-collector.opentelemetry-operator-system:4317 \
    -Dotel.resource.attributes='service.name=nux-demo-server,service.version=1.0' \
    -Dotel.traces.sampler=parentbased_always_on \
    -Dotel.sampler.arg=0.3 \
    -javaagent:/app/opentelemetry-javaagent.jar"
  MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: prometheus,health,info,metrics
  MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED: "true"
  MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED: "true"
  DEFAULT_JAVA_OPTS: "\
    -Dfile.encoding=UTF-8 \
    -XX:+UseZGC \
    -XX:ParallelGCThreads=2 \
    -Drocketmq.client.logUseSlf4j=true \
    -Dcom.alibaba.nacos.naming.cache.dir=/data/nacos/naming \
    -DJM.SNAPSHOT.PATH=/data/nacos/config \
    -DJM.LOG.PATH=/data/nacos/logs \
    -Dapp.name=nux-demo-server"
  JAVA_HEAP_OPTS: "-Xmx512m -Xms256m"
  ENV_FILE: .dev.env

envFromSecrets:
  enabled: false
  secrets:
    - name: nux-demo

# Deployment Resources
appResources:
  limits:
    cpu: "1"
    memory: "2Gi"
  requests:
    cpu: "200m"
    memory: "512Mi"

# Deployment Health Check
livenessProbe:
  failureThreshold: 3
  httpGet:
    path: /actuator/health
    port: 8080
  initialDelaySeconds: 30
  timeoutSeconds: 10
  periodSeconds: 30
readinessProbe:
  failureThreshold: 3
  httpGet:
    path: /actuator/health
    port: 8080
  initialDelaySeconds: 30
  timeoutSeconds: 10
  periodSeconds: 30

# Deployment Service
service:
  ports:
  - name: nux-demo
    type: ClusterIP
    port: 80
    targetPort: 8080
    protocol: TCP
    isMonitorPort: false

# filebeat config default
filebeat:
  image:
    repository: docker.elastic.co/beats/filebeat
    tag: 7.10.1
    pullPolicy: Always
  configName: "nudex-demo-fbcm"
  logstashHost: "output-logstash.default:5045"

filebeatResources:
  limits:
    cpu: "500m"
    memory: "200Mi"
  requests:
    cpu: "100m"
    memory: "100Mi"

# filebeat env
filebeat_env:
  SPRING_PROFILES_ACTIVE: test
  ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
  LOGSTASH_HOSTS: "logstash:5044"
  KIBANA_HOST: "kibana:5601"

imagePullSecrets:
  enabled: true
  secrets:
  - name: new-ecr-secret

serviceMonitor:
  enabled: false
  namespace: monitor
  release: "nudex-testnet"
  config:
    path: /metricsxw
    port: http-metrics
    scheme: http
    interval: 10s

# PVC 配置
volumeClaimTemplates:
  sharePvc: false # pod 共享目录
  enabled: false # pod 独享目录
  # pvItems:
  #   - name: deposit-tracker
  #     accessModes: ReadWriteOnce
  #     resources:
  #       requests:
  #         storage: 50Gi
  #     storageClassName: gp3
  #     volumeMode: Filesystem
  #     mountPath: /app/data
  #     namespace: default

# initContainers 配置
initContainers:
  enabled: false

secretEnv:
  enabled: true
  secrets:
  -  secretName: dev-nacos