# Deployment Name
appName: nux-clear-engine
namespace: exchange
labels:
  app: nux-clear-engine
appLog:
  path: /app/logs/nux-clear-engine
annotations:
  enabled: false
secretProviderClass:
  enabled: false
serviceAccount:
  enabled: false
appcm:
  enabled: false
volumeClaimTemplates:
  sharePvc: false # pod 共享目录
  enabled: false # pod 独享目录
initContainers:
  enabled: false
secretEnv:
  enabled: true
  secrets:
    - secretName: dev-nacos
# Deployment Replicas
replicaCount: 1
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: app
              operator: In
              values:
                - nudex-devnet
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app
              operator: In
              values:
                - nux-clear-engine
        topologyKey: kubernetes.io/hostname
# Deployment env
env:
  ENV_VAR_NAME: ""
  ENV_FILE: ""
  SPRING_PROFILES_ACTIVE: ""
  JAVA_OTEL_ENV: ""
  MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: ""
  MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED: ""
  MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED: ""
  DEFAULT_JAVA_OPTS: ""
  JAVA_HEAP_OPTS: ""
envFromSecrets:
  enabled: false
  # secrets:
  #   - name: secret-name
  #     key: secret-key
# Deployment image
image:
  repository: 590184059249.dkr.ecr.us-west-2.amazonaws.com/nudex/dev-nudex-clearing-engine
  tag: v20250318194516-265
  pullPolicy: Always
# Deployment Resources
appResources:
  limits:
    cpu: "500m"
    memory: "5Gi"
  requests:
    cpu: "500m"
    memory: "1Gi"
# Deployment Health Check
livenessProbe:
  failureThreshold: 3
  httpGet:
    path: /health
    port: 8080
    scheme: HTTP
  initialDelaySeconds: 30
  timeoutSeconds: 10
  successThreshold: 1
  periodSeconds: 30
readinessProbe:
  failureThreshold: 3
  successThreshold: 1
  httpGet:
    path: /health
    port: 8080
    scheme: HTTP
  initialDelaySeconds: 30
  timeoutSeconds: 10
  periodSeconds: 30
# Deployment Service
service:
  ports:
    - name: clear-engine
      type: ClusterIP
      # nodePort: 35678 # 如果type为NodePort，可以指定nodePort
      port: 9080
      targetPort: 9080
      protocol: TCP
      isMonitorPort: false
      Headless: true
#default  image secret
imagePullSecrets:
  - name: new-ecr-secret
# filebeat config default
filebeat:
  image:
    repository: docker.elastic.co/beats/filebeat
    tag: 7.10.1
    pullPolicy: Always
  configName: " clear-fb-cm"
  logstashHost: "output-logstash.default:5045"
filebeatResources:
  limits:
    cpu: "500m"
    memory: "200Mi"
  requests:
    cpu: "100m"
    memory: "100Mi"
# filebeat env
filebeat_env:
  SPRING_PROFILES_ACTIVE: test
  ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
  LOGSTASH_HOSTS: "logstash:5044"
  KIBANA_HOST: "kibana:5601"
serviceMonitor:
  enabled: false
  namespace: monitor
  release: "nudex-testnet"
  config:
    path: /metricsxw
    port: http-metrics
    scheme: http
    interval: 10s
