apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.appName }}
  namespace: {{ .Values.namespace }}
  {{- if .Values.annotations.enabled }}
  annotations:
    {{- with .Values.annotations }}
    {{- range $key, $value := . }}
      {{- if ne $key "enabled" }}
      {{ $key }}: {{ $value | quote }}
      {{- end }}
    {{- end }}
    {{- end }}
  {{- end }}
spec:
  serviceName: "{{ .Values.appName }}-service"
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  updateStrategy:
    type: {{ .Values.strategy.type | default "RollingUpdate" }}
    {{- if eq .Values.strategy.type "RollingUpdate" }}
    rollingUpdate:
      partition: 0
    {{- end }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
    spec:
      affinity:
        nodeAffinity:
          {{- toYaml .Values.affinity.nodeAffinity | nindent 10 }}
        podAntiAffinity:
          {{- toYaml .Values.affinity.podAntiAffinity | nindent 10 }}
      volumes:
      - emptyDir: {}
        name: logs
      - name: config
        configMap:
          name: {{ .Values.filebeat.configName }}
      {{- if .Values.volumeClaimTemplates.sharePvc }}
      {{- range .Values.volumeClaimTemplates.pvItems }}
      - name: {{ .name }}
        persistentVolumeClaim:
          claimName: {{ .name }}
      {{- end }}
      {{- end }}
      {{- if .Values.appcm.enabled }}
      {{- range .Values.appcm.datas }}
      - name: {{ .name }}
        configMap:
          name: {{ .name }}
      {{- end }}
      {{- end }}
      {{- if .Values.secretEnv.enabled }}
      {{- range .Values.secretEnv.secrets }}
      - name: {{ .secretName }}
        secret:
          secretName: {{ .secretName }}
      {{- end }}
      {{- end }}
      {{- if .Values.secretProviderClass.enabled }}
      - csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: {{ .Values.secretProviderClass.className }}
        name: {{ .Values.secretProviderClass.name }}
      {{- end }}
      {{- if.Values.serviceAccount.enabled }}
      serviceAccount: {{ .Values.serviceAccount.name}}
      serviceAccountName: {{ .Values.serviceAccount.name}}
      {{- end }}
      containers:
        - name: {{ .Values.appName }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- if .Values.secretEnv.enabled }}
          envFrom:
          {{- range .Values.secretEnv.secrets }}
          - secretRef:
              name: {{ .secretName }}
          {{- end }}
          {{- end }}
          volumeMounts:
            - name: logs
              mountPath: /app/logs/{{ .Values.appName }}
            {{- range .Values.volumeClaimTemplates.pvItems }}
            - name: {{ .name }}
              mountPath: {{ .mountPath | quote }}
            {{- end }}
            {{- if .Values.appcm.enabled }}
            {{- range .Values.appcm.datas }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
            {{- end }}
            {{- end }}
            {{- if .Values.secretProviderClass.enabled }}
            - name: {{.Values.secretProviderClass.name }}
              mountPath: {{.Values.secretProviderClass.mountPath }}
              readOnly: true
            {{- end }}
          resources:
            limits:
              cpu: {{ .Values.appResources.limits.cpu }}
              memory: {{ .Values.appResources.limits.memory }}
            requests:
              cpu: {{ .Values.appResources.requests.cpu }}
              memory: {{ .Values.appResources.requests.memory }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
        - name: filebeat
          image: "{{ .Values.filebeat.image.repository }}:{{ .Values.filebeat.image.tag }}"
          imagePullPolicy: {{ .Values.filebeat.image.pullPolicy }}
          env:
            - name: ELASTICSEARCH_HOSTS
              value: "{{ .Values.filebeat_env.ELASTICSEARCH_HOSTS }}"
            - name: LOGSTASH_HOSTS
              value: "{{ .Values.filebeat_env.LOGSTASH_HOSTS }}"
            - name: KIBANA_HOST
              value: "{{ .Values.filebeat_env.KIBANA_HOST }}"
          volumeMounts:
            - name: logs
              mountPath: /app/logs/{{ .Values.appName }}
            - name: config
              mountPath: /usr/share/filebeat/filebeat.yml
              subPath: filebeat.yml
          resources:
            limits:
              cpu: {{ .Values.filebeatResources.limits.cpu }}
              memory: {{ .Values.filebeatResources.limits.memory }}
            requests:
              cpu: {{ .Values.filebeatResources.requests.cpu }}
              memory: {{ .Values.filebeatResources.requests.memory }}
      {{- if .Values.initContainers.enabled }}
      initContainers:
        - name: {{ .Values.initContainers.name }}
          image: {{ .Values.initContainers.image }}
          command: {{ .Values.initContainers.command | toYaml | nindent 12 }}
          volumeMounts:
            {{- range .Values.volumeClaimTemplates.pvItems }}
            - name: {{ .name }}
              mountPath: {{ .initContainerMountPath | quote }}
            {{- end }}
      {{- end }}
  {{- if .Values.volumeClaimTemplates.enabled }}
  volumeClaimTemplates:
    {{- range .Values.volumeClaimTemplates.pvItems }}
    - metadata:
        name: {{ .name }}
      spec:
        accessModes: ['{{ .accessModes }}']
        resources:
          requests:
            storage: {{ .resources.requests.storage }}
        storageClassName: {{ .storageClassName }}
        volumeMode: {{ .volumeMode }}
    {{- end }}
  {{- end}}
